"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const vscode_1=require("vscode"),functionsConfig=require("./data/functions.json"),Utilities_1=require("./Utilities"),functions=functionsConfig;class SLSignatureHelpProvider{provideSignatureHelp(e,t,i){let r=this.getFunctionName(e,t);if(!r)return Promise.resolve(null);let n=new vscode_1.SignatureHelp,o=this.getSignatureDataByFuncNameInConfig(r);o&&o.Synopsis.forEach(e=>{n.signatures.push(this.getSignatureInformationFromCode(e,o.documentation))});let a=e.getText(),s=this.getSignatureInCodeByName(a,r);if(s)n.signatures.push(s);else{let t=Utilities_1.default.getIncludeFilesContent(a,e.uri);for(var u in t){let e=t[u];if(e&&(s=this.getSignatureInCodeByName(e,r))){n.signatures.push(s);break}}}return n.activeSignature=0,n.activeParameter=this.calcActiveParameter(e,t),Promise.resolve(n)}getSignatureInCodeByName(e,t){let i=this.getMethodInfoInCode(e);for(var r in i){let e=i[r];if(e&&e.name===t)return this.getSignatureInformationFromCode(e.signature,e.signature)}}getMethodInfoInCode(e){let t=[],i=Utilities_1.default.getMethodCodeLineFromCode(e);for(var r in i){let e=i[r];if(e){let i=Utilities_1.default.getMethodNameFromSignatureCode(e),r=e.substring(0,e.length-1).trim();t.push({name:i,signature:r})}}return t}getSignatureInformationFromCode(e,t){let i=new vscode_1.SignatureInformation(e);i.documentation=t;let r=Utilities_1.default.getParameterInfosFromSignatureCode(e);return i.parameters=r,i}getSignatureDataByFuncNameInConfig(e){return functions.Items[e]}getFunctionName(e,t){let i,r=e.lineAt(t.line),n=1;for(i=t.character-1;i>0&&n>0;i--){let e=r.text.charAt(i);")"===e&&n++,"("===e&&n--}if(n>0||i<=0)return"";let o=new vscode_1.Position(t.line,i);return e.getText(e.getWordRangeAtPosition(o))}calcActiveParameter(e,t){let i=e.lineAt(t.line),r=0,n=0;for(let e=t.character-1;e>0;e--){let t=i.text.charAt(e);","===t&&0===n&&r++,"("===t&&n++,")"===t&&n--}return r}}SLSignatureHelpProvider.triggerChars=["(",","],exports.default=SLSignatureHelpProvider;